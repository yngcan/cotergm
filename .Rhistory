c
f
f
f
f
f
f
f
c
c
c
stop
n
z
z$s
Q
c
c
c
c
c
c
c
c
c
z
c
z
z$s
Q
##------ Sep 4, 2014, 4:25:43 PM ------##
n
sm
l
Q
##------ Sep 4, 2014, 4:41:44 PM ------##
out$s
c
c
n
out$s
n
out$s
out$s
out$s
out$s
out$s
Q
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
debug(ergm.getMCMCsample)
fit1 <- ergm(FP~nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=0,MCMC.samplesize=100,MCMC.interval=1,MCMLE.maxit=1,MCMLE.min.effectiveSize=10), constraints=~atleastnonminus(y0),verbose=0)
z$s
n
z$status
n
statsmatrix
z
z
z$s
n
Q
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
debug(ergm.MCMLE)
n'
n
z$s
z
n
z
n
v$sample
c
fit1
fit1$sample
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
Q
##------ Sep 4, 2014, 9:47:12 PM ------##
n
Q
##------ Sep 4, 2014, 9:53:20 PM ------##
n
names(z)
z$newnodalstatus
c
c
c
c
c
c
where
debug(ergm.estimate)
q
'Q'
Q
fit1 <- ergm(FP~nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=0,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=1,MCMLE.min.effectiveSize=10), constraints=~atleastnonminus(y0),verbose=0)
c
n
statsmatrix0
statsmatrix
Q
fit1 <- ergm(FP~nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=0,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=1,MCMLE.min.effectiveSize=10), constraints=~atleastnonminus(y0),verbose=0)
n
statsmatrix
Q
fit1 <- ergm(FP~nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=0,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=1,MCMLE.min.effectiveSize=10), constraints=~atleastnonminus(y0),verbose=0)
n
z$s
n
statismatrix
statsmatrix
n
statsmatrix
n
n
statsmatrix
debug(ergm.MCMLE)
Q
fit1 <- ergm(FP~nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=0,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=1,MCMLE.min.effectiveSize=10), constraints=~atleastnonminus(y0),verbose=0)
n
c
c
n
statsmatrix
Q
undebug(ergm.getMCMCsample)
fit1 <- ergm(FP~nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=0,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=1,MCMLE.min.effectiveSize=10), constraints=~atleastnonminus(y0),verbose=0)
n
statsmatrix
n
statsmean
n
cov.type
V
eta0
metric
guess
Lout$par
n
Q
##------ Sep 4, 2014, 11:17:09 PM ------##
n
newnetwork
newnetwork %v% "status"
Q
fit1 <- ergm(FP~nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=0,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=10,MCMLE.min.effectiveSize=10), constraints=~atleastnonminus(y0),verbose=0)
n
newnetwork %v% "status"
n
fit1 <- ergm(FP~nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=0,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=10,MCMLE.min.effectiveSize=10), constraints=~atleastnonminus(y0),verbose=0)
n
Clist
Q
fit1 <- ergm(FP~nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=0,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=10,MCMLE.min.effectiveSize=10), constraints=~atleastnonminus(y0),verbose=0)
n
z$nodalstatus
z$newnodalstatus
newnetwork %v% status
newnetwork %v% "status"
Q
##------ Sep 4, 2014, 11:59:37 PM ------##
Clist
Clist
Clist
Clist
c
c
Q
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
n
Clist
is.na(Clist$nodalstatus)
any(is.na(Clist$nodalstatus))
debug(ergm.Cprepare)
Q
any(is.na(Clist$nodalstatus))
fit1 <- ergm(FP~nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=0,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=10,MCMLE.min.effectiveSize=10), constraints=~atleastnonminus(y0),verbose=0)
n
Clist$nodalstatus
n
Clist
p
c
n
mo
n
Clist$nodalstatus
n
dir
c
n
c
c
c
c
c
Clist
Q
##------ Sep 5, 2014, 12:08:12 AM ------##
##------ Sep 5, 2014, 12:09:10 AM ------##
##------ Sep 5, 2014, 12:09:38 AM ------##
debug(ergm.Cprepare)
fit1 <- ergm(FP~nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=0,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=10,MCMLE.min.effectiveSize=10), constraints=~atleastnonminus(y0),verbose=0)
n
nw
where
Q
##------ Sep 5, 2014, 12:16:57 AM ------##
##------ Sep 5, 2014, 12:18:15 AM ------##
##------ Sep 5, 2014, 12:18:48 AM ------##
##------ Sep 5, 2014, 12:21:01 AM ------##
##------ Sep 5, 2014, 12:21:15 AM ------##
##------ Sep 5, 2014, 12:22:35 AM ------##
##------ Sep 5, 2014, 12:23:06 AM ------##
ergm.Cprepare
##------ Sep 5, 2014, 12:26:01 AM ------##
##------ Sep 5, 2014, 12:27:35 AM ------##
##------ Sep 5, 2014, 12:27:50 AM ------##
##------ Sep 5, 2014, 9:59:04 AM ------##
traceback()
##------ Sep 5, 2014, 10:21:43 AM ------##
net1= y0
net2= nw
status="status"
net1 <- y0
net2 <- nw
as.edgelist(dissoved.m)
as.edgelist(dissloved.m)
as.edgelist(dissolved.net.m)
as.edgelist(net.tmp)
as.edgelist(dissolved.net.m )
net.tmp
str(net.tmp)
get.edge.id
?get.edge.id
net.tmp
as.edgelist(net.tmp)
str(nnet.tmp)
str(net.tmp)
net.tmp$me;
net.tmp$mel
net1
net.tmp
net2
as.edgelist(net.tmp)
get.edge.id
?as.edgelist
)
?par
?plot.network.default
plot.network.default
?plot
##------ Sep 7, 2014, 2:48:45 PM ------##
##------ Sep 8, 2014, 12:35:49 PM ------##
warings()
##------ Sep 8, 2014, 12:59:35 PM ------##
warnings()
traceback()
fit1 <- ergm(FP~nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=0,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=10,MCMLE.min.effectiveSize=10), constraints=~atleastnonminus(y0),verbose=0)
options(warn=2
)
traceback()
##------ Sep 8, 2014, 2:36:04 PM ------##
##------ Sep 8, 2014, 2:56:35 PM ------##
inslib(latticeExtra)
n
v
v$sample
statsmatrix.0
c
n
c
out
out$sample
out$s
matrix(out$s,ncol=2)
matrix(out$s,ncol=2,byrow=T)
Q
?debug
Q
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
n
Q
undebug_all()
undebug_all()
undebug_all()
undebug_all()
n
statsmatrix
n
statsmatrix
statshift
n
s
c
n
statsmatrix
z
z$s
z$sample
n
statshift
statshift
statsmatrix
theta0
eta0
=mcmc.init
mcmc.init
c
c
c
c
c
##------ Sep 8, 2014, 9:53:34 PM ------##
n
z
names(z)
z$statsmatrix
statsmatrix
statsmatrix
Q
undebug_all()
undebug_all()
undebug_all()
undebug_all()
##------ Sep 9, 2014, 10:26:32 AM ------##
c
?plot.network
?network
##------ Sep 9, 2014, 10:37:20 AM ------##
?plot.network
sessionInfo()
?plot
fit1
summary(fit1)
##------ Sep 20, 2014, 3:44:33 PM ------##
inslib(robustbase)
inslib(trust)
inslib(code)
inslib(coda)
##------ Sep 20, 2014, 3:56:16 PM ------##
nw%v%"status"
debug(get.MM.dyads)
fit1 <- ergm(FP~nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=0,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=20,MCMLE.min.effectiveSize=30), constraints=~atleastnonminus(y0),verbose=0)
fit1 <- ergm(FP~nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=0,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=20,MCMLE.min.effectiveSize=30), constraints=~atleastnonminus(y0),verbose=0)
nw$val
nw$val[[1]]
unlist(lapply(nw$val,function(x)x$status))
all(unlist(lapply(nw$val,function(x)x$status)) %in% c(2,1))
traceback()
fit1 <- ergm(FP~nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=0,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=20,MCMLE.min.effectiveSize=30), constraints=~atleastnonminus(y0),verbose=0)
##------ Sep 20, 2014, 4:02:59 PM ------##
inslib(Rglpk)
inslib(latticeExtra)
##------ Sep 20, 2014, 4:18:45 PM ------##
traceback()
##------ Sep 20, 2014, 4:22:28 PM ------##
traceback()
debug(ergm)
fit1 <- ergm(FP~edges+nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=0,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=20,MCMLE.min.effectiveSize=30), constraints=~atleastnonminus(y0),verbose=0)
init
init
##------ Sep 20, 2014, 4:33:26 PM ------##
##------ Sep 20, 2014, 4:36:22 PM ------##
##------ Sep 20, 2014, 4:36:59 PM ------##
##------ Sep 20, 2014, 4:44:45 PM ------##
out
model
as.double(.deinf(eta0))
as.integer(nedges)
as.integer(nedges)
debug(dorun)
debug(dorun)
debug(dorun)
c
##------ Sep 20, 2014, 5:10:59 PM ------##
##------ Sep 20, 2014, 5:13:53 PM ------##
##------ Sep 20, 2014, 5:17:00 PM ------##
##------ Sep 22, 2014, 9:47:23 AM ------##
##------ Sep 22, 2014, 9:52:00 AM ------##
##------ Sep 22, 2014, 9:54:58 AM ------##
##------ Sep 22, 2014, 9:58:13 AM ------##
debug(ergm.getMCMCsample)
fit1 <- ergm(FP~edges+nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=0,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=20,MCMLE.min.effectiveSize=10,MCMC.max.interval=100,MCMC.runtime.traceplot=T), constraints=~atleastnonminus(y0),verbose=1)
z
n
newnetwork
Q
##------ Sep 22, 2014, 1:21:21 PM ------##
?plot.network
##------ Sep 22, 2014, 4:17:37 PM ------##
##------ Sep 22, 2014, 10:42:46 PM ------##
##------ Sep 22, 2014, 10:49:24 PM ------##
##------ Sep 22, 2014, 11:29:58 PM ------##
##------ Sep 22, 2014, 10:52:55 PM ------##
##------ Sep 22, 2014, 11:32:22 PM ------##
##------ Sep 22, 2014, 11:34:33 PM ------##
##------ Sep 22, 2014, 11:35:00 PM ------##
##------ Sep 22, 2014, 11:37:36 PM ------##
##------ Sep 22, 2014, 11:47:40 PM ------##
##------ Sep 23, 2014, 12:19:07 AM ------##
##------ Sep 23, 2014, 11:42:46 AM ------##
simulate.ergm
.litPath()
.libPaths()
inslib(robustbase)
##------ Sep 28, 2014, 1:17:58 PM ------##
##------ Sep 28, 2014, 8:03:46 PM ------##
inslib(knitr)
inslib(markdown)
MHproposal
MCMCfalg
MCMCflag
Q
##------ Sep 28, 2014, 9:15:53 PM ------##
##------ Sep 28, 2014, 10:41:06 PM ------##
traceback()
traceback()
debug(ergm.getMCMCsample)
debug(do.run)
debug(dorun)
debug(dorun)
debug(dorun)
c
r
debug(ergm.mcmcslave)
debug(ergm.mcmcslave)
debug(ergm.mcmcslave)
debug(dorun)
debug(dorun)
debug(dorun)
nedges
tails
Q
##------ Sep 28, 2014, 10:53:54 PM ------##
##------ Sep 29, 2014, 1:43:48 PM ------##
?nodematch
##------ Sep 29, 2014, 10:42:27 AM ------##
##------ Sep 29, 2014, 1:47:09 PM ------##
##------ Sep 29, 2014, 2:10:06 PM ------##
##------ Sep 29, 2014, 2:18:39 PM ------##
##------ Sep 29, 2014, 10:25:34 PM ------##
##------ Sep 29, 2014, 10:17:38 PM ------##
##------ Sep 29, 2014, 10:47:44 PM ------##
traceback()
##------ Sep 29, 2014, 10:49:54 PM ------##
traceback()
debug(ergm.getmodel)
?nodematch
termroot
ls()
fname
formula
formula.env
search()
?search
?ls
ls(envir=formula.env)
ls(envir=formula.env,mode="function")
exists
?exists
ls.str(formula.env)
where("edges")
fname="d_b2concurrent"
fname="b2concurrent"
exists(fname, envir=formula.env, mode="function")
Q
##------ Sep 29, 2014, 11:04:38 PM ------##
##------ Sep 29, 2014, 11:11:38 PM ------##
##------ Sep 30, 2014, 11:33:53 AM ------##
##------ Sep 30, 2014, 10:57:05 AM ------##
##------ Sep 30, 2014, 11:38:47 AM ------##
##------ Sep 30, 2014, 10:56:50 AM ------##
##------ Sep 30, 2014, 2:13:42 PM ------##
##------ Sep 30, 2014, 1:38:26 PM ------##
inslib(knitr)
?hint
?knit
getwd()
library("network",lib=cotergm_path_linux)
source("/home/kirk/Dropbox/hiv_network/workspace/kk_utils/utils.R", echo=FALSE, encoding="UTF-8")
source("/home/kirk/Dropbox/hiv_network/workspace/cotergm/R/functions.R",echo=FALSE, encoding="UTF-8")
library("network",lib=cotergm_path_linux)
library("ergm",lib=cotergm_path_linux)
.libPaths(cotergm_path_linux)
library("ergm",lib=cotergm_path_linux)
sessionInfo()
##------ Sep 30, 2014, 2:14:18 PM ------##
##------ Oct 2, 2014, 3:47:03 PM ------##
options(warn=2)
traceback()
debug(ergm.MCMLE)














?debug
debug

























































































































































c

c

s
gg













undebug(ergm.MCMLE)
fit1 <- ergm(FP~edges+plus+nodematch_cotergm("status",diff=TRUE,keep=2),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=20,MCMLE.min.effectiveSize=20,MCMC.max.interval=100,MCMC.runtime.traceplot=T), constraints=~atleastnonminus(y0),verbose=0)
debug(ergm.MCMLE)
fit1 <- ergm(FP~edges+plus+nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=20,MCMLE.min.effectiveSize=20,MCMC.max.interval=100), constraints=~atleastnonminus(y0),verbose=0)

















































n





eta

eta











fit1 <- ergm(FP~edges+plus+nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=20,MCMLE.min.effectiveSize=20,MCMC.max.interval=100), constraints=~atleastnonminus(y0),verbose=0)



































fit1 <- ergm(FP~edges+plus+nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=20,MCMLE.min.effectiveSize=20,MCMC.max.interval=100), constraints=~atleastnonminus(y0),verbose=0)


































model$target.stats
model$formula
summary(model$formula, basis = nw, response = response)
debug(ergm.getglobalstats)




gs
Clist
c

fit1 <- ergm(FP~edges+plus+nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=20,MCMLE.min.effectiveSize=20,MCMC.max.interval=100), constraints=~atleastnonminus(y0),verbose=0)
c
c
c
undebug(ergm.getglobalstats)


Clist
c
c
undebug(ergm.getglobalstats)
fit1 <- ergm(FP~edges+plus+nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=20,MCMLE.min.effectiveSize=20,MCMC.max.interval=100), constraints=~atleastnonminus(y0),verbose=0)
c
fit1 <- ergm(FP~edges+plus+nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=20,MCMLE.min.effectiveSize=20,MCMC.max.interval=100), constraints=~atleastnonminus(y0),verbose=0)














Clist




















model$formula
nw
response
model$target.stats
debug(ergm.getglobalstats)



Clist
n























































































model$formula
model$target.stats

m


Clist
c
c
c
c






fit1 <- ergm(FP~edges+plus+nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=20,MCMLE.min.effectiveSize=20,MCMC.max.interval=100), constraints=~atleastnonminus(y0),verbose=0)
c
c
c
c


c

Clist

Clist
m
where
model$formula
Q
##------ Oct 2, 2014, 4:21:18 PM ------##
options(warn=2)
##------ Oct 2, 2014, 4:24:30 PM ------##
##------ Oct 2, 2014, 4:25:45 PM ------##
options(warn=2)
##------ Oct 2, 2014, 4:28:50 PM ------##
options(warn=2)
##------ Oct 2, 2014, 4:31:47 PM ------##
options(warn=1)
options(warn=2)
debug(ergm.Cprepare)
fit1 <- ergm(FP~edges+plus+nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=20,MCMLE.min.effectiveSize=20,MCMC.max.interval=100), constraints=~atleastnonminus(y0),verbose=0)
c
c
c





















Clist$nterms
mo
c



mo

















mo
c
c
c
c
fit1 <- ergm(FP~edges+plus+nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=20,MCMLE.min.effectiveSize=20,MCMC.max.interval=100), constraints=~atleastnonminus(y0),verbose=0)



c
c
c
c
c
c
c
n


















mo
m
debug(ergm.getmodel)
fit1 <- ergm(FP~edges+plus+nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=20,MCMLE.min.effectiveSize=20,MCMC.max.interval=100), constraints=~atleastnonminus(y0),verbose=0)
c
c
c
c
c
c
n




v
formula
term.list.formula
formula[[3]]


model



outlist
debug(updatemodel.ErgmTerm)
c
outlist
c
outlist
c
outlist
n


model$coef.names










model
c
c
c
c
outlist
c
outlist
c
outlist
c
c

c
c
c
outlist
c
outlist
nodecov <- rep(1,10)
Q
q
##------ Oct 2, 2014, 4:50:02 PM ------##
options(warn=2)
##------ Oct 2, 2014, 8:23:44 PM ------##
warnings()
options(warn=1)
##------ Oct 2, 2014, 8:45:22 PM ------##
##------ Oct 7, 2014, 8:37:15 PM ------##
debug(ergm.MCMLE)
c
Q
debug(ergm.mcmcslave)
fit1 <- ergm(FP~edges+plus+nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=30,MCMLE.min.effectiveSize=10,MCMC.max.interval=100), constraints=~atleastnonminus(y0),verbose=1)
c
n












Clist$input
Q
undebug_all)
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
fit1 <- ergm(FP~edges+plus+nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=10,MCMLE.min.effectiveSize=10,MCMC.max.interval=100), constraints=~atleastnonminus(y0),verbose=1)
c
Q
fit1 <- ergm(FP~edges+plus+nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=10,MCMLE.min.effectiveSize=10,MCMC.max.interval=100), constraints=~atleastnonminus(y0),verbose=1)


Clist$input
MHproposal$inputs






Clist$input
FP%v%"status"
MHproposal$inputs
length(Clist$input)
c
c
c
c
c
Q
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
##------ Oct 10, 2014, 8:58:50 AM ------##
install.packages("statnet",lib="C:\R\R-3.1.1\library_trunk")
install.packages("statnet",lib="C:\\R\\R-3.1.1\\library_trunk")
install.packages("ergm",lib="C:\\R\\R-3.1.1\\library_trunk")
install.packages("ergm",lib="C:\\R\\R-3.1.1\\library_trunk",dependence=T)
?install.packages
install.packages("ergm",lib="C:\\R\\R-3.1.1\\library_trunk",dependences=T)
install.packages("ergm",lib="C:\\R\\R-3.1.1\\library_trunk",dependencies=T)
install.packages("devtools",lib="C:\\R\\R-3.1.1\\library_trunk",dependencies=T)
install.packages("shiny",lib="C:\\R\\R-3.1.1\\library_trunk",dependencies=T)
install.packages("statnet",lib="C:\\R\\R-3.1.1\\library_trunk",dependencies=T)
install.packages("tergm",lib="C:\\R\\R-3.1.1\\library_trunk",dependencies=T)
install.packages("ndtv",lib="C:\\R\\R-3.1.1\\library_trunk",dependencies=T)
##------ Oct 12, 2014, 10:57:59 PM ------##
##------ Oct 13, 2014, 9:05:13 AM ------##
getwd()
Sys.info()
getwd()
R.Version()
.Library.site
file.path
file.path()
.Platform
R.home()
##------ Oct 13, 2014, 9:27:30 AM ------##
cotergm
cotergm
##------ Oct 13, 2014, 8:02:26 PM ------##
d



##------ Oct 14, 2014, 9:44:15 AM ------##
##------ Oct 14, 2014, 9:54:35 AM ------##
install.packages("network",lib=cotergm)
##------ Oct 14, 2014, 8:37:09 PM ------##
##------ Oct 14, 2014, 9:15:00 PM ------##
##------ Oct 14, 2014, 9:15:25 PM ------##
##------ Oct 14, 2014, 9:19:13 PM ------##
##------ Oct 14, 2014, 9:31:42 PM ------##
##------ Oct 14, 2014, 9:33:05 PM ------##
##------ Oct 14, 2014, 10:54:40 PM ------##
##------ Oct 14, 2014, 11:00:52 PM ------##
##------ Oct 14, 2014, 11:05:38 PM ------##
##------ Oct 14, 2014, 10:58:38 PM ------##
##------ Oct 14, 2014, 11:10:24 PM ------##
##------ Oct 14, 2014, 11:14:51 PM ------##
##------ Oct 14, 2014, 11:16:55 PM ------##
##------ Oct 14, 2014, 11:21:06 PM ------##
##------ Oct 14, 2014, 11:35:09 PM ------##
##------ Oct 15, 2014, 5:18:49 PM ------##
##------ Oct 15, 2014, 5:19:19 PM ------##
##------ Oct 15, 2014, 5:20:41 PM ------##
##------ Oct 15, 2014, 5:23:01 PM ------##
getwd()
inslib(knit)
inslib(knitr,lib=cotergm)
inslib(rmarkdown,lib=cotergm)
inslib(markdown,lib=cotergm)
##------ Oct 15, 2014, 7:24:25 PM ------##
##------ Oct 15, 2014, 7:46:12 PM ------##
names(fit1)
summary(fit1)
fit1$mc.se
fit1
summary(fit1)[,1]
summary(fit1)
names(summary(fit1))
summary(fit1)$coef
warnings()
##------ Oct 15, 2014, 9:13:14 PM ------##
warnings()
##------ Oct 15, 2014, 11:27:43 PM ------##
##------ Oct 21, 2014, 10:42:16 PM ------##
##------ Oct 21, 2014, 10:52:47 PM ------##
##------ Oct 21, 2014, 11:12:43 PM ------##
##------ Nov 1, 2014, 11:12:57 PM ------##
##------ Nov 3, 2014, 9:32:16 AM ------##
##------ Nov 3, 2014, 9:47:18 AM ------##
##------ Nov 3, 2014, 9:50:12 AM ------##
##------ Nov 3, 2014, 11:39:41 AM ------##
warnings()
##------ Nov 3, 2014, 1:30:13 PM ------##
##------ Nov 3, 2014, 9:57:43 AM ------##
debug
debug(InitErgmTerm.nodematch_cotergm)
n












inputs
n














inputs
n









c
c
##------ Nov 3, 2014, 1:38:22 PM ------##
debug(InitErgmTerm.nodematch_cotergm)
n

a











inputs
c
Q
##------ Nov 3, 2014, 1:57:48 PM ------##
##------ Nov 3, 2014, 2:00:17 PM ------##
##------ Nov 3, 2014, 6:56:19 PM ------##
getwd()
##------ Nov 3, 2014, 6:59:54 PM ------##
debug(ergm.checkextreme.model)
n

n








Q
##------ Nov 3, 2014, 7:56:53 PM ------##
debug(ergm.checkextreme.model )
fit1 <- ergm(FP~nodematch_cotergm("status",diff=TRUE, y0edge=1),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=20,MCMLE.min.effectiveSize=20,MCMC.max.interval=100), constraints=~atleastnonminus(y0),verbose=0)
n






Q
##------ Nov 3, 2014, 8:36:49 PM ------##
##------ Nov 3, 2014, 8:41:41 PM ------##
##------ Nov 3, 2014, 8:44:16 PM ------##
##------ Nov 3, 2014, 8:42:52 PM ------##
##------ Nov 3, 2014, 8:44:24 PM ------##




debug(ergm)
n




























y0
debug(ergm.mcmcslave)
c
MHproposal
y0heads




Q
##------ Nov 3, 2014, 9:51:03 PM ------##
##------ Nov 3, 2014, 9:53:05 PM ------##
traceback()
debug(ergm.getglobalstats )
fit1 <- ergm(FP~nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=10,MCMLE.min.effectiveSize=20,MCMC.max.interval=100), constraints=~atleastnonminus(y0),verbose=1)
n
MHproposal
Q
##------ Nov 3, 2014, 9:56:09 PM ------##
##------ Nov 3, 2014, 9:59:27 PM ------##
debug(ergm)
debug(ergm)
n





































debug(ergm.getMCMCsample)
c
MHproposal
n







##------ Nov 3, 2014, 10:01:34 PM ------##
n
s

n











##------ Nov 3, 2014, 10:02:33 PM ------##
n










##------ Nov 3, 2014, 10:02:51 PM ------##









s
n

























s
y0nodalstatus
n
y0heads
y0nedges
##------ Nov 3, 2014, 10:09:46 PM ------##
c
traceback()
##------ Nov 3, 2014, 10:14:04 PM ------##
traceback()
##------ Nov 3, 2014, 10:18:32 PM ------##
##------ Nov 3, 2014, 10:19:15 PM ------##
traceback()
fit1 <- ergm(FP~nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=10,MCMLE.min.effectiveSize=20,MCMC.max.interval=100), constraints=~atleastnonminus(y0),verbose=1)
traceback()
##------ Nov 3, 2014, 10:27:09 PM ------##
traceback()
##------ Nov 3, 2014, 10:33:41 PM ------##
traceback()
##------ Nov 3, 2014, 10:37:40 PM ------##
traceback()
##------ Nov 3, 2014, 10:39:27 PM ------##
##------ Nov 3, 2014, 10:40:55 PM ------##






































Q
c
c
fit1 <- ergm(FP~nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=1,MCMLE.min.effectiveSize=20,MCMC.max.interval=100), constraints=~atleastnonminus(y0),verbose=0)
c
s
n


##------ Nov 3, 2014, 10:48:39 PM ------##
traceback()
##------ Nov 3, 2014, 10:51:18 PM ------##
traceback()
##------ Nov 3, 2014, 10:53:09 PM ------##
traceback()
debug(simulate.formula)
fit1 <- ergm(FP~nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=1,MCMLE.min.effectiveSize=20,MCMC.max.interval=100), constraints=~atleastnonminus(y0),verbose=0)
n



MHproposal
n














MHproposal
n















s
n







debug(ergm.mcmcslave)
fit1 <- ergm(FP~nodematch_cotergm("status",diff=TRUE),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=1,MCMLE.min.effectiveSize=20,MCMC.max.interval=100), constraints=~atleastnonminus(y0),verbose=0)
c
MHproposal
Q
##------ Nov 3, 2014, 11:00:58 PM ------##
c
MHproposal
n

s
n







Q
##------ Nov 3, 2014, 11:04:33 PM ------##
c
c
c
c
c
c
Q


undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
Q
##------ Nov 4, 2014, 8:50:47 AM ------##
##------ Nov 4, 2014, 10:43:43 AM ------##
##------ Nov 4, 2014, 10:45:10 AM ------##
##------ Nov 9, 2014, 12:59:30 PM ------##
n

coef.hist
Q
n

coef.hist
debug(ergm.mcmcslave)
c
n

s

n










s
n

















eta0
n






Q
##------ Nov 9, 2014, 3:50:56 PM ------##
traceback()
debug(san)
c



































##------ Nov 10, 2014, 9:33:42 PM ------##
getwd()
set.seed(1)
##------ Nov 11, 2014, 10:16:16 PM ------##
status="status"
?plot.network
as.matrix(DP)
as.matrix(dissolved.net.p)
as.edgelist(net.tmp)
as.edgelist(dissolved.net.p)
as.edgelist(net.tmp)
as.edgelist(dissolved.net.p)
as.matrix(dissolved.net.p)
get.edge.id(net.tmp)
net.tmp$mel
)
)
?plot.network
debug(InitErgmTerm.nodematch_cotergm)
n
a

a
n




u
nodecov


nodecov

nodecov




inputs
ui
Q



n














summary(FP~edges+plus+nodematch_cotergm("status",diff=TRUE,y0edge=2),MHproposal=MHproposal)













inputs
Q
##------ Nov 11, 2014, 11:58:04 PM ------##
debug(InitErgmTerm.nodematch_cotergm)
n










inputs
inputs
n



##------ Nov 12, 2014, 11:58:55 AM ------##
##------ Nov 12, 2014, 12:26:08 PM ------##
##------ Nov 17, 2014, 4:39:38 PM ------##
warnings()
##------ Nov 17, 2014, 9:33:51 PM ------##
 MHproposal$inputs
length(MHproposal$inputs)
73-1-5
Q
debug(updatemodel.ErgmTerm)
n
outlist
c
outlist
c
outlist
MHproposal$inputs
c
c
c








c
c
c
Q
undebug_all()
n
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
MHproposal$inputs
Q
##------ Nov 18, 2014, 9:20:22 AM ------##
##------ Nov 17, 2014, 11:24:28 PM ------##
##------ Nov 18, 2014, 9:55:13 AM ------##
?control.ergm
##------ Nov 23, 2014, 8:14:27 PM ------##
##------ Nov 23, 2014, 8:18:35 PM ------##
getwd()
debug(ergm.MCMLE)
n
















s
n










statsmatrix










statshift



















































































statshift











































statsmean























s
n















statshi
statshift

























esteq
n
















statsmean
















stats.hist
n

















n
c
fit2 <- ergm(FM~edges+plus+nodematch_cotergm("status",diff=TRUE,y0edge=2),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=3,MCMLE.min.effectiveSize=20,MCMC.max.interval=100), constraints=~atleastnonplus(y0),verbose=1)
n



































































conv.pval
esteq









































n

n





































conv.pval
statsmatrix


Q
fit2 <- ergm(FM~edges+plus+nodematch_cotergm("status",diff=TRUE,y0edge=2),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=3,MCMLE.min.effectiveSize=20,MCMC.max.interval=100), constraints=~atleastnonplus(y0),verbose=1)
n






























































































mcmc.init
n



stats.hist
n








mcmc.eta0
n












statshift





esteq
n





















conv.pal
con.pval




























mcmc.init




stats.hit
stats.hist










mcmc.eta0









































conv.pval
n















statsmean













mcmc.init
n


stats.hist
statsmatrix


















control.ergm()
c
fit2 <- ergm(FM~edges+plus+nodematch_cotergm("status",diff=TRUE,y0edge=2),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=3,MCMLE.min.effectiveSize=20,MCMC.max.interval=100), constraints=~atleastnonplus(y0),verbose=1,eval.loglik=TRUE)


coef.hist






























































































coef.hist






































effSizes



















































































effSizes
















































































c
##------ Nov 24, 2014, 2:08:59 PM ------##
##------ Nov 24, 2014, 2:09:09 PM ------##
debug(ergm.MCMLE)
fit2 <- ergm(FM~edges+plus+nodematch_cotergm("status",diff=TRUE,y0edge=2),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=3,MCMLE.min.effectiveSize=20,MCMC.max.interval=100), constraints=~atleastnonplus(y0),verbose=1,eval.loglik=F)
n


















































effSizes





































n




n






























esteq
n









effSizes
n





any(effSizes<=10)
effSizes
Q
##------ Nov 24, 2014, 9:09:12 PM ------##
debug(ergm.MCMLE)
fit2 <- ergm(FM~edges+plus+nodematch_cotergm("status",diff=TRUE,y0edge=2),control=control.ergm(MCMC.burnin=10000,MCMC.samplesize=10000,MCMC.interval=100,MCMLE.maxit=3,MCMLE.min.effectiveSize=20,MCMC.max.interval=100), constraints=~atleastnonplus(y0),verbose=1,eval.loglik=F)
r




n



















































































































































































































effSizes








































































c
q
Q
undebug_all()
'undebug_all()
'undebug_all()
'undebug_all()
'undebug_all()
'undebug_all()
'undebug_all()

'undebug_all()
'undebug_all()
'undebug_all()
'undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
##------ Nov 24, 2014, 9:28:36 PM ------##
##------ Nov 24, 2014, 9:29:31 PM ------##
getwd()
names(fit3)
fit4$stats.hist
fit3$stats.hist
debug(DP.nw)
DP <- DP.nw(y0,nw,"status")
n



index.mm
index
?setdiff
class(el)
dim(el)
Q
DP
plot(DM)
##------ Nov 24, 2014, 11:30:16 PM ------##
##------ Nov 25, 2014, 9:27:46 AM ------##
DM%v%"status"
DP%v%"status"
debug(DM.nw)











dessolved.net.m
dessolved.net.m%v%"status"
n

net2%v%status
status
net2%v%"status"
Q
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
i
debug(DP.nw)





index

index.mm
net1 %v% status
n

net.tmp

traceback()
net.tmp$mel
traceback()
net.tmp
DP <- DP.nw(y0,nw,"status")
n





dissolved.edge.p


net.tmp
length(net.tmp$mel)
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
traceback()
debug(DM.wn)
debug(DM.nw)
DM <- DM.nw(y0,nw,"status")
n









Q





DM <- DM.nw(y0,nw,"status")
DM <- DM.nw(y0,nw,"status")

debug(DM.nw)
DM <- DM.nw(y0,nw,"status")










DM <- DM.nw(y0,nw,"status")








!length(net.tmp$mel)
length(net.tmp$mel)
Q




undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
traceback()
debug(DP.nw)




index


dissolved.edge.p




Q
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
traceback()
debug(DP.nw)
n









delete.edge.id.p
n
undebug_all()
undebug_all()
undebug_all()
undebug_all()
undebug_all()
i
traceback()
net1 %v% "status"
net2 %v% "status"
##------ Dec 1, 2014, 3:08:55 PM ------##
##------ Dec 1, 2014, 3:15:23 PM ------##
##------ Dec 1, 2014, 4:48:46 PM ------##
##------ Dec 1, 2014, 4:51:07 PM ------##
##------ Dec 1, 2014, 9:02:56 PM ------##
x=c(1,2,1,1,1,1)
debug(show)
								show(net1,net2)						
n












								show(net1,net2)						









MHproposal




								show(net1,net2)						











MHproposal
Q



traceback()
traceback()
##------ Dec 1, 2014, 8:35:16 PM ------##
x <- c(1,1,1,1,1,1)
net1
net2
##------ Dec 1, 2014, 9:37:53 PM ------##
##------ Dec 1, 2014, 9:29:29 PM ------##
x <- c(1,1,1,1,1,1)
traceback()
##------ Dec 1, 2014, 9:28:54 PM ------##
##------ Dec 1, 2014, 9:38:18 PM ------##
##------ Dec 1, 2014, 9:39:25 PM ------##
x <- c(1,2,1,1,1,1)
i=1
i=1
aa()
aaa()
x <- c(1,1,1)
x <- c(1,1,1)
aaa(1,1,1)
aaa(c(1,1,1))
?plot.network
DM %v% "status"
DM %v% "status"
DP %v% "status"
debug(DM.nw)


















net1.al

dissolved.net.m.al
net2 %v% status
net2
net2 %v% status
Q
nw
nw %v% "status"
x <- c(1,1,1,1,1,1)
nw %v% "status"
c
c
Q
DM %v% "status"
##------ Dec 2, 2014, 9:51:31 AM ------##
##------ Dec 2, 2014, 10:54:08 AM ------##
##------ Dec 2, 2014, 10:55:43 AM ------##
install.packages("slam")
##------ Dec 7, 2014, 3:10:49 PM ------##
